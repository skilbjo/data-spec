#!/usr/bin/env bash
set -eou pipefail

get_state() {
  local query_id="$1"

  local status="$(aws athena \
    --region us-east-1 \
    get-query-execution \
    --query-execution-id "$query_id" | \
    jq '.QueryExecution.Status')"

  local state="$(echo "$status" | jq -r '.State')"

  echo "$state"
}

get_query () {
  local query_id="$1"

  local results=$(aws athena \
    --region us-east-1 \
    get-query-execution \
    --query-execution-id "$query_id" | \
    jq '.QueryExecution.ResultConfiguration.OutputLocation'
  )

  local cmd="aws s3 cp --region us-east-1 $results /tmp/athena/query >/dev/null"

  eval "$cmd" && \
    cat /tmp/athena/query
}

wait_til_finished() {
  local query_id="$1"
  local status="in flux"
  local number_of_tries=100

  while [[ $status != done ]]; do
    local state="$(get_state "$query_id")"

    case "$state" in
       FAILED | CANCELLED )
        aws athena \
          --region us-east-1 \
          get-query-execution \
          --query-execution-id "$query_id" | \
          jq '.QueryExecution.Status.StateChangeReason' >&2

        echo 'Athena query failed.' >&2 && exit 1 ;;
      SUCCEEDED )
        status="done"
        get_query "$query_id" ;;
      RUNNING | SUBMITTED )
        sleep 3
        ((number_of_tries = number_of_tries - 1)) ;;
      * )
        echo "Athena query state is unknown..: $state ... go tell John" >&2 && exit 1 ;;
    esac
  done
}

query() {
  local sql="$1"
  local sql_trimmed="$(sed -e 's/[[:space:]]*$//' <<<${sql})"

  if [[ ! -z $sql_trimmed ]]; then
    athena_query=$(aws athena \
      --region us-east-1 \
      start-query-execution \
      --result-configuration 'OutputLocation=s3://aws-athena-query-results-470340682667-us-east-1/,EncryptionConfiguration={EncryptionOption=SSE_S3}' \
      --output text \
      --query-string "$sql_trimmed"
    )

    wait_til_finished "$athena_query"
  fi
}
