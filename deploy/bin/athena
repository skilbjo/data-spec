#!/usr/bin/env bash
set -eou pipefail

get_status() {
  local query_id=$1

  aws athena \
    --region us-east-1 \
    get-query-execution \
    --query-execution-id "$query_id" | \
    jq '.QueryExecution.Status.State'
}

get_query () {
  local query_id=$1

  local results=$(aws athena \
    --region us-east-1 \
    get-query-execution \
    --query-execution-id "$query_id" | \
    jq '.QueryExecution.ResultConfiguration.OutputLocation'
  )

  local cmd="aws s3 cp --region us-east-1 $results /tmp/athena/query >/dev/null"

  echo "query_id is: $query_id"

  eval $cmd && \
    cat /tmp/athena/query
}

wait_til_finished() {
  local query_id=$1
  local status="in flux"
  local number_of_tries=5

  while [[ $status != done ]]; do
    set +e
    get_status $query_id | grep "SUCCEEDED" >/dev/null
    if [[ $? -eq 0 ]]; then
      status="done"
      get_query "$query_id"
    else
      sleep 3
      ((number_of_tries = number_of_tries -1))
    fi
    set -e
  done
}

query() {
  local sql="$1"
  local sql_trimmed="$(sed -e 's/[[:space:]]*$//' <<<${sql})"

  if [[ ! -z $sql_trimmed ]]; then
    athena_query=$(aws athena \
      --region us-east-1 \
      start-query-execution \
      --result-configuration 'OutputLocation=s3://aws-athena-query-results-183081753049-us-east-1/' \
      --output text \
      --query-string "$sql_trimmed"
    )

    wait_til_finished $athena_query
  fi
}
